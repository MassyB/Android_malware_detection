import os
from utils import list_files, MALWARE_DATASET_DIR_PATH, BENIGN_DATASET_DIR_PATH
from apk import APK
from feature_extractor_dex import extract_dex_features
from feature_extractor_manifest import extract_manifest_features


def analyse_apks(path: str, dataset_name: str, malignity: int) -> int:
    apks = {APK(apk_path, dataset_name, malignity) for apk_path in list_files(path)}
    count = 0
    apks_number = len(apks)
    for apk in apks:
        extract_dex_features(apk)
        extract_manifest_features(apk)
        try:
            apk.save_apk_to_db()
            count += 1
            print(apk.get_name() + ' analyzed .... ' + str(count) + '/' + str(apks_number))
        except Exception as exception:
            print('Error for APK ' + apk.get_name())
            print(exception)
    return count


def analyse_malware_dataset(dir_name: str, dataset_name: str) -> int:
    dataset_dir_path = os.path.join(MALWARE_DATASET_DIR_PATH, dir_name)
    return analyse_apks(dataset_dir_path, dataset_name, 1)


def analyse_benign_dataset(dir_name: str, dataset_name) -> int:
    dataset_dir_path = os.path.join(BENIGN_DATASET_DIR_PATH, dir_name)
    return analyse_apks(dataset_dir_path, dataset_name, 0)
