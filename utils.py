import os
import shutil
import subprocess
import re

BAKSMALI_PATH = os.path.abspath(os.path.join('tools', 'baksmali-2.1.3.jar'))
BAKSMALI_OUTPUT = os.path.abspath(os.path.join('tools_output', 'baksmali_output'))

MALWARE_DATASET_DIR_PATH = os.path.abspath(os.path.join('datasets', 'malwares'))
BENIGN_DATASET_DIR_PATH = os.path.abspath(os.path.join('datasets', 'benign'))


def clean_directory(dir_path):
    _, dirnames, filenames = next(os.walk(dir_path), (None, None, None))
    if dirnames:
        for dirname in dirnames:
            shutil.rmtree(os.path.abspath(os.path.join(dir_path, dirname)))
    if filenames:
        for filename in filenames:
            os.remove(os.path.abspath(os.path.join(dir_path, filename)))


def clean_baksmali_output_dir():
    clean_directory(BAKSMALI_OUTPUT)


def execute_baksmali_jar(apk_path: str):
    print(BAKSMALI_PATH)
    subprocess.run(['java', '-jar', BAKSMALI_PATH, apk_path, '-o', BAKSMALI_OUTPUT])


def get_malware_abs_paths() -> set:
    return {os.path.join(MALWARE_DATASET_DIR_PATH, malware_path)
            for malware_path in os.listdir(MALWARE_DATASET_DIR_PATH)}


def get_benign_abs_paths() -> set:
    return {os.path.join(BENIGN_DATASET_DIR_PATH, benign_path)
            for benign_path in os.listdir(BENIGN_DATASET_DIR_PATH)}


def get_smali_files() -> str:
    for (dirpath, _, filenames) in os.walk(BAKSMALI_OUTPUT):
        if filenames:
            for file_name in filenames:
                yield os.path.join(dirpath, file_name)


def get_smali_lines(file_path: str) -> str:
    with open(file_path) as file:
        for line in file:
            yield line
