import csv
import numpy as np
from sklearn.svm import LinearSVC


def get_features_weights(linearSVC: 'LinearSVC', vector_space_dict: dict, threshold=0) -> dict:
    coefs = linearSVC.coef_[0]
    weights = np.concatenate((coefs, linearSVC.intercept_), axis=0)
    weights = np.array([w for w in weights if str(w) != '0.0'])
    features = np.sort(list(vector_space_dict.keys()))

    feature_weight_dict = {feature: coef for feature, coef in zip(features, coefs) if str(coef) != '0.0'}
    feature_weight_dict['_intercept'] = linearSVC.intercept_[0]
    feature_weight_dict['_threshold'] = threshold
    feature_weight_dict['_total'] = np.absolute(weights).sum()
    feature_weight_dict['_sum_benign_features'] = np.absolute(weights[weights < 0]).sum()
    feature_weight_dict['_sum_malignant_features'] = np.absolute(weights[weights > 0]).sum()

    return feature_weight_dict


def get_features_weights_csv(linearSVC: 'LinearSVC', vector_space_dict: dict, csv_name='feature_weight_mapping.csv'):
    with open(csv_name, 'w') as f:
        writer = csv.writer(f)
        rows = list(get_features_weights(linearSVC, vector_space_dict).items())
        writer.writerows(rows)
