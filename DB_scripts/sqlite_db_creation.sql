/*tables de travail- reference 	*/
DROP TABLE IF EXISTS api_permission_mapping;
CREATE TABLE api_permission_mapping(
				api TEXT ,
				permission TEXT);

DROP TABLE IF EXISTS suspicious_apis;
CREATE TABLE suspicious_apis(
			api TEXT);
CREATE INDEX api_perimssion_mapping_index ON api_permission_mapping(api)
CREATE INDEX suspicious_apis_index ON suspicious_apis(api)
/* tables intermediaires */

DROP TABLE IF EXISTS apks;
CREATE TABLE apks(
                   id INTEGER PRIMARY KEY,
                   name TEXT UNIQUE ON CONFLICT IGNORE,
                   malignity INTEGER)

DROP TABLE IF EXISTS features;
CREATE TABLE features(
                       apk_id INTEGER REFERENCES apks(id),
                       name TEXT,
                       type TEXT)

CREATE VIEW IF NOT EXISTS dimensions 
AS
SELECT features.type, 
       features.name,
       sum(apks.malignity) as malware_usage,
       (sum(apks.malignity) * 1.0) / count(features.apk_id) as malware_ratio
FROM apks
     JOIN
	 features
	 ON apks.id = features.apk_id
GROUP BY features.type, features.name	 

