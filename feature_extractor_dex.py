from apk import APK, DexFeatures
from dex_extractor import extract_url, extract_api_call, extract_methode_path
from apis_manager import is_suspicious, is_restricted, get_required_permissions
from utils import execute_baksmali_jar, get_smali_files, get_smali_lines, clean_baksmali_output_dir


def extract_restricted_api(apk: 'APK', smali_line: str):
    api_call = extract_api_call(smali_line)
    if is_restricted(api_call):
        apk.add_restricted_api(api_call)


def extract_used_permissions(apk: 'APK', smali_line: str):
    api_call = extract_api_call(smali_line)
    if is_restricted(api_call):
        apk.add_used_permissions(get_required_permissions(api_call))


def extract_suspicious_api(apk: 'APK', smali_line: str):
    method_path = extract_methode_path(smali_line)
    if is_suspicious(method_path):
        api_call = extract_api_call(smali_line)
        apk.add_suspicious_api(api_call)


def extract_network_adress(apk: 'APK', smali_line: str):
    url = extract_url(smali_line)
    if url:
        apk.add_url(url)


def extract_dex_features(apk: 'APK'):
    execute_baksmali_jar(apk.get_path())
    for smali_file in get_smali_files():
        for smali_line in get_smali_lines(smali_file):
            extract_restricted_api(apk, smali_line)
            extract_used_permissions(apk, smali_line)
            extract_suspicious_api(apk, smali_line)
            extract_network_adress(apk, smali_line)
    clean_baksmali_output_dir()





