from apk import APK, DexFeatures
from dex_extractor import extract_url, extract_api_call, extract_methode_path
from apis_manager import is_suspicious, is_restricted, get_required_permissions
from utils import execute_baksmali_jar, get_smali_files, get_smali_lines, clean_baksmali_output_dir


def extract_dex_features(apk: 'APK'):
    execute_baksmali_jar(apk.get_path())
    for smali_file in get_smali_files():
        for smali_line in get_smali_lines(smali_file):
            api_call = extract_api_call(smali_line)
            if api_call:
                if is_restricted(api_call):
                    apk.add_restricted_api(api_call)
                    apk.add_used_permissions(get_required_permissions(api_call))
                if is_suspicious(extract_methode_path(api_call)):
                    apk.add_suspicious_api(api_call)
            else:
                url = extract_url(smali_line)
                if url:
                    apk.add_url(url)
    clean_baksmali_output_dir()


# apk = APK('hello', 'datasets/malwares/0a0a78000e418ea28fa02e8c162c43396db6141ef8fe876db4027fef04bed663')
# extract_dex_features(apk)
# print(apk.get_features(1))
# print(len(apk.get_features(1)))
# print('restricted apis:')
# print(len(apk.get_dex_features().get_restricted_apis()))
# print('suspicious_apis:')
# print(len(apk.get_dex_features().get_suspicious_apis()))
# print('url:')
# print(len(apk.get_dex_features().get_url()))
# print('used_permission:')
# print(len(apk.get_dex_features().get_used_permissions()))
